# Generated by Django 4.1.3 on 2023-02-08 09:55
import os

from django.contrib.auth.models import Permission
from django.contrib.contenttypes.models import ContentType
from django.core.management.sql import emit_post_migrate_signal
from django.db import migrations


def create_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    Group.objects.create(name=os.environ.get('DJ_GROUP_TEAM_OWNER'))
    Group.objects.create(name=os.environ.get('DJ_GROUP_COMPETITION_OWNER'))
    db_alias = schema_editor.connection.alias
    emit_post_migrate_signal(2, False, db_alias)

    Permission = apps.get_model('auth', 'Permission')
    ContentType = apps.get_model('contenttypes', 'ContentType')
    team_owner = Group.objects.get(name=os.environ.get('DJ_GROUP_TEAM_OWNER'))
    competition_owner = Group.objects.get(name=os.environ.get('DJ_GROUP_COMPETITION_OWNER'))

    team = apps.get_model('teams', 'Team')
    player = apps.get_model('players', 'Player')
    competition = apps.get_model('competitions', 'Competition')
    match = apps.get_model('competitions', 'Match')

    content_type_team = ContentType.objects.get_for_model(team)
    content_type_player = ContentType.objects.get_for_model(player)
    content_type_competition = ContentType.objects.get_for_model(competition)
    content_type_match = ContentType.objects.get_for_model(match)

    team_owner_permissions = Permission.objects.filter(content_type=content_type_team) | Permission.objects.filter(
        content_type=content_type_player)
    competition_owner_permissions = Permission.objects.filter(
        content_type=content_type_team) | Permission.objects.filter(
        content_type=content_type_player) | Permission.objects.filter(
        content_type=content_type_competition) | Permission.objects.filter(content_type=content_type_match)

    team_owner.permissions.set(team_owner_permissions)
    competition_owner.permissions.set(competition_owner_permissions)



def delete_groups(apps, schema_editor):
    Group = apps.get_model('auth', 'Group')
    team_owner = Group.objects.get(name=os.environ.get('DJ_GROUP_TEAM_OWNER'))
    competition_owner = Group.objects.get(name=os.environ.get('DJ_GROUP_COMPETITION_OWNER'))
    team_owner.permissions.clear()
    competition_owner.permissions.clear()
    Group.objects.get(name=os.environ.get('DJ_GROUP_TEAM_OWNER')).delete()
    Group.objects.get(name=os.environ.get('DJ_GROUP_COMPETITION_OWNER')).delete()


class Migration(migrations.Migration):
    dependencies = [
        ('users', '0002_superuser'),
    ]

    operations = [migrations.RunPython(create_groups, delete_groups)
                  ]
